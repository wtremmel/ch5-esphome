

esp8266:
  board: nodemcu

ota:
  password: "64f31e717b484c5988f2c7e067d752d3"

 
# ---
substitutions:
  room: arbeitszimmer
  uroom: Arbeitszimmer

mqtt:
  broker: mqtt.ch5.garf.de
  discovery: false
  discovery_retain: false
  topic_prefix: /Chattenweg5/$uroom/sensor
  reboot_timeout: 0s
  keepalive: 20s
  username: $room-sensor
  password: $room-sensor

esphome:
  name: $room-sensor
  on_boot:
    priority: 600
    then:
      - light.turn_on:
          id: led
          brightness: 100%
          red: 100%
          green: 0
          blue: 0
      - wait_until:
          wifi.connected:
      - light.turn_on:
          id: led
          brightness: 100%
          red: 100%
          green: 100%
          blue: 0
      - wait_until:
          api.connected:
      - light.turn_on:
          id: led
          brightness: 100%
          red: 0%
          green: 100%
          blue: 0
      - delay: 1s
      - light.turn_off: led
      



# Enable logging
logger:
  level: DEBUG

# Enable Home Assistant API
api:


button:
  - platform: safe_mode
    name: "$uroom Restart (Safe Mode)"
  - platform: restart
    name: "$uroom Restart"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password


i2c:
  - id: bus_a
    scan: true
    sda: D2
    scl: D1
    frequency: 400kHz

uart:
  rx_pin: D4
  tx_pin: D3
  baud_rate: 9600

bme680_bsec:
  address: 0x77
  temperature_offset: 0

sensor:
  - platform: wifi_signal
    name: "${uroom} WiFi Signal"
    update_interval: 60s
  - platform: sds011
    pm_2_5:
      id: "${room}_p25"
      name: "${uroom} Feinstaub <2.5µm"
    pm_10_0:
      id: "${room}_p10"
      name: "${uroom} Feinstaub <10.0µm"
    update_interval: 3min
  - platform: bme680_bsec
    temperature:
      accuracy_decimals: 2
      name: "${uroom} Temperatur"
      id: ${room}_temperature
      on_value:
        then:
          - mqtt.publish:
              topic: "/Chattenweg5/$uroom/temperature"
              payload: !lambda |-
                return to_string(id(${room}_temperature).state);
    pressure:
      accuracy_decimals: 2
      name: "${uroom} Luftdruck"
      id: "${room}_pressure"
    humidity:
      accuracy_decimals: 2
      name: "${uroom} Luftfeuchtigkeit"
      id: "${room}_humidity"
      on_value:
        then:
          - mqtt.publish:
              topic: "/Chattenweg5/$uroom/humidity"
              payload: !lambda |-
                return to_string(id(${room}_humidity).state);
    gas_resistance:
      accuracy_decimals: 2
      name: "${uroom} Gas Resistance"
    iaq:
      accuracy_decimals: 2
      name: "${uroom}  IAQ"
    co2_equivalent:
      accuracy_decimals: 2
      name: "${uroom}  CO2 Equivalent"
      id: ${room}_co2
    breath_voc_equivalent:
      accuracy_decimals: 2
      name: "${uroom}  Breath VOC Equivalent"
  - platform: max44009
    name: "${uroom} Helligkeit"
    id: "${room}_light"
    accuracy_decimals: 2
    update_interval: 60s
  - platform: absolute_humidity
    name: "${uroom} Absolute Luftfeuchtigkeit"
    temperature: ${room}_temperature
    humidity: ${room}_humidity
  
text_sensor:
  - platform: bme680_bsec
    iaq_accuracy:
      name: "${uroom} IAQ Accuracy"


light:
  - platform: neopixelbus
    id: led
    variant: WS2811
    type: GRB
    pin: D6
    num_leds: 1
    name: "${uroom} LED"

