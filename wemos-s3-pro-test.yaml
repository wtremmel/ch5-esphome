
esphome:
  name: wemos-s3-pro-test
  friendly_name: wemos-s3-pro-test

  on_boot:
    - priority: 600
      then:
      - light.turn_on:
          id: led
          brightness: 100%
          red: 100%
          green: 0
          blue: 0
      - wait_until:
          wifi.connected:
      - light.turn_on:
          id: led
          brightness: 100%
          red: 100%
          green: 100%
          blue: 0
      - wait_until:
          api.connected:
      - light.turn_on:
          id: led
          brightness: 100%
          red: 0%
          green: 100%
          blue: 0
      - delay: 1s
      - light.turn_off: led

esp32:
  board: lolin_s3
  framework:
    type: arduino

# Enable logging
logger:
  baud_rate: 0

# Enable Home Assistant API
api:
  encryption:
    key: "sQSDyyXz/KSstdzM9CFNJk2RgYE8v2+JyigPOMYu0zo="

ota:
  password: "106d5aa8bbe1f6547717126203d12b22"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails

i2c:
  - id: bus_a
    scan: True
    sda: GPIO9
    scl: GPIO10

spi:
  clk_pin: GPIO12
  miso_pin: GPIO13
  mosi_pin: GPIO11

font:
  - file: "fonts/Roboto/DroidSans-Bold.ttf"
    id: roboto
    size: 14
  - file: "fonts/Roboto/Roboto-Thin.ttf"
    id: thin
    size: 12

time:
  - platform: sntp
    id: esptime

image:
  - file: mdi:window-open-variant
    id: icon_openWindow
  - file: mdi:window-closed-variant
    id: icon_closedWindow
  - file: mdi:car-side
    id: icon_car
  - file: mdi:thermometer
    id: icon_thermometer
  - file: mdi:arrow-left-bold
    id: icon_arrowleft
  - file: mdi:arrow-right-bold
    id: icon_arrowright

qr_code:
  - id: garf
    value: https://outpost.garf.de

display:
  - platform: waveshare_epaper
    id: epaper
    cs_pin: GPIO48
    dc_pin: GPIO47
    reset_pin: GPIO21
    reset_duration: 10ms
    model: 2.13in-ttgo
    full_update_every: 60
    update_interval: 10s
    rotation: 180
    lambda: |-
      int line=0;
      auto white = Color(255,255,255);
      auto black = Color(0,0,0);
      //it.clear();
      it.fill(white);

      it.strftime(it.get_width(),0,id(thin),black,TextAlign::TOP_RIGHT,"%H:%M:%S",id(esptime).now());
      line=13;
      
      it.horizontal_line(0,line,it.get_width(),black);
      
      line+=2;
      it.print(20,line,id(roboto),black,"Vorg.:");
      it.printf(it.get_width(),line,id(roboto),black,TextAlign::TOP_RIGHT,"%.1fC",id(vorgarten_temperatur).state);
      
      line+=16;
      it.image(0,line,id(icon_thermometer),black,white);
      it.print(20,line,id(roboto),black,"Garten:");
      it.printf(it.get_width(),line,id(roboto),black,TextAlign::TOP_RIGHT,"%.1fC",id(garten_temperatur).state);
      
      line+=16;
      it.print(20,line,id(roboto),black,"Loggia:");
      it.printf(it.get_width(),line,id(roboto),black,TextAlign::TOP_RIGHT,"%.1fC",id(loggia_temperatur).state);
      
      line += 18;
      it.horizontal_line(0,line,it.get_width(),black);

      line += 8;
      it.qr_code(0,line,id(garf),black,4);
      
      line = it.get_height()-20;
      it.horizontal_line(0,line,it.get_width(),black);
      line = it.get_height()-18;
      if (id(wostehtdasAuto).state.c_str()[0] == '<')
        it.image(0,line,id(icon_arrowleft),black,white);
      if (id(wostehtdasAuto).state.c_str()[0] == '>')
        it.image(it.get_width(),line,id(icon_arrowright),ImageAlign::TOP_RIGHT,black,white);
      it.image(it.get_width()/2-18,line,id(icon_car),black,white);


button:
  - platform: safe_mode
    name: "Restart (Safe Mode)"
  - platform: restart
    name: "Restart"

light:
  - platform: neopixelbus
    pin: GPIO38
    variant: ws2811
    num_leds: 1
    name: LED
    type: RGB
    id: led

# interval:
#  - interval: 20s
#    then:
#      - component.update: epaper

sensor:
#  - platform: debug
#    free:
#      name: "Heap Free"
#    block:
#      name: "Heap Max Block"
#    loop_time:
#      name: "Loop Time"
  - platform: wifi_signal
    name: "WiFi Signal Sensor"
    id: wifi_rssi
  - platform: homeassistant
    entity_id: sensor.garten_temperatur
    id: garten_temperatur
  - platform: homeassistant
    entity_id: sensor.vorgarten_temperatur
    id: vorgarten_temperatur  
  - platform: homeassistant
    entity_id: sensor.2og_loggia_temperatur
    id: loggia_temperatur

text_sensor:
#  - platform: debug
#    device:
#      name: "Device Info"
#    reset_reason:
#      name: "Reset Reason"
  - platform: homeassistant
    internal: true
    id: wostehtdasAuto
    entity_id: input_text.carlocation

binary_sensor:
  - platform: homeassistant
    entity_id: binary_sensor.lumi_lumi_sensor_magnet_aq2_0e3dcf03_on_off
    id: briefkasten
    name: "Briefkasten"
    internal: true
    on_press:
      then:
        - light.turn_on:
            id: led
            brightness: 80%
            red: 100%
            green: 0
            blue: 0
    on_release:
      then:
        - light.turn_on:
            id: led
            brightness: 80%
            red: 1
            green: 1
            blue: 0