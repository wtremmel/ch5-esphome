
esphome:
  name: wemos-s3-pro-test
  friendly_name: wemos-s3-pro-test

  on_boot:
    - priority: 600
      then:
      - light.turn_on:
          id: led
          brightness: 100%
          red: 100%
          green: 0
          blue: 0
      - wait_until:
          wifi.connected:
      - light.turn_on:
          id: led
          brightness: 100%
          red: 100%
          green: 100%
          blue: 0
      - wait_until:
          api.connected:
      - light.turn_on:
          id: led
          brightness: 100%
          red: 0%
          green: 100%
          blue: 0
      - delay: 1s
      - light.turn_off: led

esp32:
  board: lolin_s3
  framework:
    type: arduino

# Enable logging
logger:
  baud_rate: 0

# Enable Home Assistant API
api:
  encryption:
    key: "sQSDyyXz/KSstdzM9CFNJk2RgYE8v2+JyigPOMYu0zo="

ota:
  password: "106d5aa8bbe1f6547717126203d12b22"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails

i2c:
  - id: bus_a
    scan: True
    sda: GPIO9
    scl: GPIO10



font:
  - file: "fonts/Roboto/DroidSans-Bold.ttf"
    id: roboto
    size: 14
  - file: "fonts/Roboto/DroidSans-Bold.ttf"
    id: headline
    size: 30
  - file: "fonts/Roboto/DroidSans-Bold.ttf"
    id: bold20
    size: 20
    glyphs: "!%()+=,-_.:°0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzäöüÄÜÖß"
  - file: "fonts/Roboto/Roboto-Thin.ttf"
    id: thin
    size: 15

time:
  - platform: homeassistant
    id: esptime

image:
  - file: mdi:window-open-variant
    id: icon_openWindow
    resize: 40x40
  - file: mdi:window-closed-variant
    id: icon_closedWindow
    resize: 40x40
  
  # Car location
  - file: mdi:car-side
    id: icon_car
    resize: 40x40
  - file: mdi:arrow-left-bold
    id: icon_arrowleft
    resize: 40x40
  - file: mdi:arrow-right-bold
    id: icon_arrowright
    resize: 40x40
  - file: mdi:map-marker-question-outline
    id: icon_location_unknown
    resize: 35x35
    
  # Temperature Icons
  - file: mdi:thermometer-high
    id: icon_thermometer_high
    resize: 80x80
  - file: mdi:thermometer-low
    id: icon_thermometer_low
    resize: 80x80
  - file: mdi:thermometer
    id: icon_thermometer_mid
    resize: 80x80
  - file: mdi:snowflake-thermometer
    id: icon_thermometer_snow
    resize: 80x80
  - file: mdi:sun-thermometer
    id: icon_thermometer_sun
    resize: 80x80
  - file: mdi:temperature-celsius
    id: icon_celsius
    resize: 30x30

  # Sunset and Sunrise
  - file: mdi:weather-sunset-up
    id: icon_sunrise
    resize: 35x35
  - file: mdi:weather-sunset-down
    id: icon_sunset
    resize: 35x35
  
  # Current weather
  - file: mdi:weather-pouring
    id: icon_rain_heavy
    resize: 180x180
  - file: mdi:weather-rainy
    id: icon_rain_light
    resize: 180x180
  - file: mdi:weather-lightning-rainy
    id: icon_rain_lightning
    resize: 180x180
  - file: mdi:weather-lightning
    id: icon_lightning
    resize: 200x200
  - file: mdi:weather-sunny
    id: icon_sonnenschein
    resize: 200x200
  - file: mdi:weather-cloudy
    id: icon_cloudy
    resize: 200x200
  - file: mdi:weather-partly-cloudy
    id: icon_partly_cloudy
    resize: 200x200
  - file: mdi:weather-night
    id: icon_night
    resize: 200x200

  # Letterbox
  - file: mdi:email-outline
    id: icon_briefkasten
    resize: 200x200
  - file: mdi:email-alert-outline
    id: icon_briefkasten_offen
    resize: 200x200

  # Moon phases 
  - file: mdi:moon-full
    id: icon_neumond
    resize: 35x35
  - file: mdi:moon-new
    id: icon_vollmond
    resize: 35x35
  - file: mdi:moon-first-quarter
    id: icon_moon_first_quarter
    resize: 35x35
  - file: mdi:moon-last-quarter
    id: icon_moon_last_quarter
    resize: 35x35
  - file: mdi:moon-waning-crescent
    id: icon_moon_waning_crescent
    resize: 35x35
  - file: mdi:moon-waning-gibbous
    id: icon_moon_waning_gibbous
    resize: 35x35
  - file: mdi:moon-waxing-crescent
    id: icon_moon_waxing_crescent
    resize: 35x35
  - file: mdi:moon-waxing-gibbous
    id: icon_moon_waxing_gibbous
    resize: 35x35
  
  
graph:
  - id: graph_luftdruck
    sensor: luftdruck
    duration: 24h
    width: 285
    height: 200
    border: true

  

  
spi:
  clk_pin: GPIO12
  # miso_pin: GPIO
  mosi_pin: GPIO11

display:
  - platform: waveshare_epaper
    id: epaper
    cs_pin: GPIO17
    dc_pin: GPIO16
    reset_pin: GPIO15
    busy_pin: GPIO18
    reset_duration: 2ms
    model: 7.50inv2
    update_interval: 60s
    rotation: 0
    lambda: |-
      int x,y,frame,width,height,enabled=1;
      
      //------------------------------------------------------------------
      // Top status line
      //------------------------------------------------------------------
      
      it.strftime(it.get_width(),0,id(headline),TextAlign::TOP_RIGHT,"%H:%M:%S",id(esptime).now());
      it.horizontal_line(0,35,it.get_width());
      
      //------------------------------------------------------------------
      // Widget where is my car?
      // x,y,frame
      // size 82x40
      //------------------------------------------------------------------
      x = 300;
      y = 0;
      width=82;
      height=35;
      it.start_clipping(x,y,x+width,y+height);
      frame = 0;
      if (id(wostehtdasAuto).state.c_str()[0] == '<') {
        it.image(x,y,id(icon_arrowleft));
        it.image(x+40,y,id(icon_car));
      } else if (id(wostehtdasAuto).state.c_str()[0] == '>') {
        it.image(x,y,id(icon_car));
        it.image(x+40,y,id(icon_arrowright));
      } else {
        it.image(x,y,id(icon_car));
        it.image(x+40,y,id(icon_location_unknown));
      }
      if (frame) {
        it.rectangle(x,y,82,40);
      }
      it.end_clipping();
      //------------------------------------------------------------------
      // Widget: Moon Phase
      //------------------------------------------------------------------
      x = 135;
      y = 0;
      height = 35;
      width = 40;
      frame = 0;
      if (id(moon_phase).state == "full_moon" )
        it.image(x,y,id(icon_vollmond));
      else if (id(moon_phase).state == "new_moon")
        it.image(x,y,id(icon_neumond));
      else if (id(moon_phase).state == "waxing_crescent")
        it.image(x,y,id(icon_moon_waxing_crescent));
      else if (id(moon_phase).state == "first_quarter")
        it.image(x,y,id(icon_moon_first_quarter));
      else if (id(moon_phase).state == "waxing_gibbous")
        it.image(x,y,id(icon_moon_waxing_gibbous));
      else if (id(moon_phase).state == "waning_gibbous")
        it.image(x,y,id(icon_moon_waning_gibbous));
      else if (id(moon_phase).state == "last_quarter")
        it.image(x,y,id(icon_moon_last_quarter));
      else if (id(moon_phase).state == "waning_crescent")
        it.image(x,y,id(icon_moon_waning_crescent));

      //------------------------------------------------------------------
      // Widget: QR code of guest network
      //------------------------------------------------------------------
      //------------------------------------------------------------------
      // Widget: Loggia Temperature
      // x,y,frame,thisid,headline
      // size
      //------------------------------------------------------------------
      x = 0;
      y = 35;
      width=180;
      height=112;
      frame = 1;
      enabled=1;
      auto thisid = id(loggia_temperatur);
      if (isnan(thisid->state))
        enabled=0;

      if (enabled) {
        if (frame) {
          it.rectangle(x,y,width,height);
        }
        it.print(x+4,y,id(headline),"Loggia");
        auto thisicon = id(icon_thermometer_sun);
        if (thisid->state <= 0)
          thisicon = id(icon_thermometer_snow);
        else if (thisid->state <= 10)
          thisicon = id(icon_thermometer_low);
        else if (thisid->state <= 25)
          thisicon = id(icon_thermometer_mid);
        else if (thisid->state <= 30)
          thisicon = id(icon_thermometer_high);
        it.image(x,y+35,thisicon);
        it.printf(x+80,y+40,id(headline),"%.1f",thisid->state);
        it.image(x+90+50,y+40,id(icon_celsius));
      }  
      //------------------------------------------------------------------
      // Widget: Garten Temperature
      // x,y,frame,thisid,headline
      // size
      //------------------------------------------------------------------
      x = x+width-1;
      enabled=1;
      frame = 1;
      thisid = id(garten_temperatur);
      if (isnan(thisid->state))
        enabled=0;

      
      if (enabled) {
        if (frame) {
          it.rectangle(x,y,width,height);
        }
        it.print(x+4,y,id(headline),"Garten");
          auto thisicon = id(icon_thermometer_sun);
        if (thisid->state <= 0)
          thisicon = id(icon_thermometer_snow);
        else if (thisid->state <= 10)
          thisicon = id(icon_thermometer_low);
        else if (thisid->state <= 25)
          thisicon = id(icon_thermometer_mid);
        else if (thisid->state <= 30)
          thisicon = id(icon_thermometer_high);
        it.image(x,y+35,thisicon);
        it.printf(x+80,y+40,id(headline),"%.1f",thisid->state);
        it.image(x+90+50,y+40,id(icon_celsius));
      }    
      //------------------------------------------------------------------
      // Widget: Vorgarten Temperature
      // x,y,frame,thisid,headline
      // size
      //------------------------------------------------------------------
      x = x+width-1;
      frame = 1;
      enabled=1;
      thisid = id(vorgarten_temperatur);
      if (isnan(thisid->state))
        enabled=0;
      
      if (enabled) {
        if (frame) {
          it.rectangle(x,y,width,height);
        }
        it.print(x+4,y,id(headline),"Vorgarten");
          auto thisicon = id(icon_thermometer_sun);
        if (thisid->state <= 0)
          thisicon = id(icon_thermometer_snow);
        else if (thisid->state <= 10)
          thisicon = id(icon_thermometer_low);
        else if (thisid->state <= 25)
          thisicon = id(icon_thermometer_mid);
        else if (thisid->state <= 30)
          thisicon = id(icon_thermometer_high);
        it.image(x,y+35,thisicon);
        it.printf(x+80,y+40,id(headline),"%.1f",thisid->state);
        it.image(x+90+50,y+40,id(icon_celsius));  
      }
      int end_of_first_row = y + height-1;

    
      //------------------------------------------------------------------
      // Widget: Current weather
      //------------------------------------------------------------------
      x = x+width-1;
      int weather_x = x;
      height = 200;
      width = 250;
      int end_of_weather = y + height-1;
      frame = 1;
      if (frame) {
        it.rectangle(x,y,width,height);
      }
      bool Gewitter = (!isnan(id(lightning_distance).state) && id(lightning_distance).state <= 10);
      // first check the rain sensor if it is raining
      if (id(rain_intensity).state > 0) {
        //   second check for lightining
        it.printf(x+width/2,y+162,id(headline),TextAlign::TOP_CENTER,"%.2f mm/h",id(rain_intensity).state);
        if (Gewitter) {
          // Gewitter und regen
          it.image(x+30,y,id(icon_rain_lightning));
        } else {
          // Nur Regen, wie stark?
          if (id(rain_intensity).state > 8) {
            // regnet stark
            it.image(x+30,y,id(icon_rain_heavy));
          } else {
            // regnet schwach
            it.image(x+30,y,id(icon_rain_light));
          }
        }
      } else if (Gewitter) {
        // Nur Gewitter, kein Regen
        it.image(x+10,y,id(icon_lightning));
      } else if (id(sun_elevation).state >= 0) {
      // Isses Tag oder Nacht?
        // Tag
        if (id(loggia_helligkeit).state > 1800) {
          //   Heftiger Sonnenschein
          it.image(x+30,y,id(icon_sonnenschein));
        } else if (id(loggia_helligkeit).state > 500) {
          //   Bewoelkt mit Sonne
          it.image(x+30,y,id(icon_partly_cloudy));
        } else {
          it.image(x+30,y,id(icon_cloudy));
        }
      } else {
      // Nacht
        it.image(x+30,y,id(icon_night));
      // Mondphasen anzeigen
      }
      //------------------------------------------------------------------
      // Widget: Sunset and Sunrise, both shown
      //------------------------------------------------------------------
      x = 0;
      y = end_of_first_row;
      height = 80;
      width = 140;
      frame = 1;
      enabled = 0;
      if (enabled) {
        if (frame) {
          it.rectangle(x,y,width,height);
        }
        it.image(x,y+2,id(icon_sunrise));
        it.image(x,y+42,id(icon_sunset));
        it.printf(x+44,y+10, id(bold20),"%s",id(next_sunrise).state.c_str());
        it.printf(x+44,y+50,id(bold20),"%s",id(next_sunset).state.c_str());
      }
      //------------------------------------------------------------------
      // Widget: Sunset and Sunrise, only next shown
      //------------------------------------------------------------------
      x = 0;
      y = 0;
      height = 35;
      width = 140;
      frame = 0;
      enabled = 1;
      if (enabled) {
        if (frame) {
          it.rectangle(x,y,width,height);
        }
        if (id(sun_elevation).state >= 0) {
          // show next sunset
          it.image(x,y,id(icon_sunset));
          it.printf(x+44,y+8,id(bold20),"%s",id(next_sunset).state.c_str());
        } else {
          // show next sunrise
          it.image(x,y,id(icon_sunrise));
          it.printf(x+44,y+8, id(bold20),"%s",id(next_sunrise).state.c_str());
        }
      }
      //------------------------------------------------------------------
      // Widget: Open Windows
      //------------------------------------------------------------------
      x = 0;
      y = end_of_first_row+20;
      height = 220;
      width = 250;
      frame = 0;
      enabled = 1;
      if (enabled) {
        int mockup = 0;
        if (frame) {
          it.rectangle(x,y,width,height);
        }
        // draw house shape
        int slope=80;
        it.line(x,y+slope,x+width/2,y);
        it.line(x+width/2,y,x+width,y+slope);
        it.line(x,y+slope,x,y+height);
        it.line(x+width,y+slope,x+width,y+height);
        it.line(x,y+height,x+width,y+height);

        it.print(x+width/2,y+(slope/2),id(headline),TextAlign::TOP_CENTER,"Fenster");
        if(mockup || id(bad2_fenster).state)
          it.print(x+4,y+slope,id(bold20),"Bad2");
        if (mockup || id(loggia_fenster).state)
          it.print(x+width-4,y+slope,id(bold20),TextAlign::TOP_RIGHT,"Loggia");
        it.horizontal_line(x,y+slope+25,x+width);
        
        int og1y = y+slope+30;
        if (mockup || id(bad1_fenster).state)
          it.print(x+4,og1y,id(bold20),"Bad1");
        if (mockup || id(schlafzimmer_fenster).state)
          it.print(x+width-4,og1y,id(bold20),TextAlign::TOP_RIGHT,"Schlafzimmer");
        if (mockup || id(gaestezimmer_fenster).state)
          it.print(x+4,og1y+20,id(bold20),"Gästezimmer");
        it.horizontal_line(x,og1y+20+25,x+width);

        int egy = og1y+20+25+5;
        if (mockup || id(kueche_fenster).state)
          it.print(x+4,egy,id(bold20),"Küche");
        if (mockup || id(wohnzimmer_fenster).state)
          it.print(x+width-4,egy,id(bold20),TextAlign::TOP_RIGHT,"Wohnzimmer");
        if (mockup || id(haustuer).state)
          it.print(x+width/2,egy+30,id(bold20),TextAlign::TOP_CENTER,"Haustür");
      }
      //------------------------------------------------------------------
      // Widget: Briefkasten
      //------------------------------------------------------------------
      x = weather_x;
      y = end_of_weather;
      height = 200;
      width = 250;
      frame = 1;
      if (frame) {
        it.rectangle(x,y,width,height);
      }
      if (id(briefkasten).state)
        it.image(x+(width/2),y,id(icon_briefkasten_offen), ImageAlign::TOP_CENTER);
      else if (id(letterbox))
        it.image(x+(width/2),y,id(icon_briefkasten), ImageAlign::TOP_CENTER); 

      //------------------------------------------------------------------
      // Widget: Wind
      //------------------------------------------------------------------
      x = 255;
      y = end_of_first_row;
      it.graph(x,y,id(graph_luftdruck));


globals:
  - id: letterbox
    type: bool
    initial_value: "0"

sun:
  latitude: 50.21581309274059
  longitude: 8.642163276672365

button:
  - platform: safe_mode
    name: "Restart (Safe Mode)"
  - platform: restart
    name: "Restart"

light:
  - platform: neopixelbus
    pin: GPIO38
    variant: ws2811
    num_leds: 1
    name: LED
    type: RGB
    id: led

# interval:
#  - interval: 20s
#    then:
#      - component.update: epaper

sensor:
#  - platform: debug
#    free:
#      name: "Heap Free"
#    block:
#      name: "Heap Max Block"
#    loop_time:
#      name: "Loop Time"
  - platform: sun
    type: elevation
    id: sun_elevation
  - platform: wifi_signal
    name: "WiFi Signal Sensor"
    id: wifi_rssi
  - platform: homeassistant
    entity_id: sensor.garten_temperatur
    id: garten_temperatur
  - platform: homeassistant
    entity_id: sensor.vorgarten_temperatur
    id: vorgarten_temperatur  
  - platform: homeassistant
    entity_id: sensor.2og_loggia_temperatur
    id: loggia_temperatur
  - platform: homeassistant
    entity_id: sensor.rain_intensity
    id: rain_intensity
  - platform: homeassistant
    entity_id: sensor.blitzortung_lightning_distance
    id: lightning_distance
  - platform: homeassistant
    entity_id: sensor.2og_loggia_helligkeit
    id: loggia_helligkeit
  - platform: homeassistant
    entity_id: sensor.arbeitszimmer_luftdruck
    id: luftdruck
    
text_sensor:
#  - platform: debug
#    device:
#      name: "Device Info"
#    reset_reason:
#      name: "Reset Reason"
  - platform: homeassistant
    internal: true
    id: wostehtdasAuto
    entity_id: input_text.carlocation
  - platform: sun
    type: sunrise
    id: next_sunrise
  - platform: sun
    type: sunset
    id: next_sunset
  - platform: homeassistant
    entity_id: sensor.moon_phase
    id: moon_phase

binary_sensor:
  - platform: homeassistant
    entity_id: binary_sensor.lumi_lumi_sensor_magnet_aq2_0e3dcf03_on_off
    id: briefkasten
    name: "Briefkasten"
    internal: true
    on_press:
      then:
        - light.turn_on:
            id: led
            brightness: 80%
            red: 100%
            green: 0
            blue: 0
        - globals.set:
            id: letterbox
            value: "1"
    on_release:
      then:
        - light.turn_on:
            id: led
            brightness: 80%
            red: 1
            green: 1
            blue: 0
        - globals.set:
            id: letterbox
            value: "1"
  - platform: homeassistant
    entity_id: input_boolean.alarmierung
    id: alarmierung
    internal: true
  - platform: homeassistant
    entity_id: binary_sensor.fenster_bad1_state  
    id: bad1_fenster
    internal: true
  - platform: homeassistant
    entity_id: binary_sensor.fenster_bad2_state  
    id: bad2_fenster
    internal: true
  - platform: homeassistant
    entity_id: binary_sensor.fenster_gaestezimmer_35fd906b_ias_zone  
    id: gaestezimmer_fenster
    internal: true
  - platform: homeassistant
    entity_id: binary_sensor.fenster_kueche_state  
    id: kueche_fenster
    internal: true
  - platform: homeassistant
    entity_id: binary_sensor.fenster_schlafzimmer_state  
    id: schlafzimmer_fenster
    internal: true
  - platform: homeassistant
    entity_id: binary_sensor.fenster_wohnzimmer_state  
    id: wohnzimmer_fenster
    internal: true
  - platform: homeassistant
    entity_id: binary_sensor.balkontuer_arbeitszimmer_state  
    id: loggia_fenster
    name: "Arbeitszimmer"
    internal: true
  - platform: homeassistant
    entity_id: binary_sensor.lumi_lumi_sensor_magnet_aq2_on_off
    id: haustuer
    internal: true
    on_state:
      then:
        - light.turn_off: led
        - globals.set:
            id: letterbox
            value: "0"
  - platform: homeassistant
    entity_id: binary_sensor.warning_bad_homburg_v_d_hohe_stadt_1
    id: katwarn
  - platform: homeassistant
    entity_id: binary_sensor.warning_bad_homburg_v_d_hohe_stadt_1
    attribute: headline
    id: katwarn_headline
    
 