substitutions:
  room: espcamera
  uroom: "ESP Camera"

esphome:
  name: ${room}

esp32:
  board: esp32dev

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:
  password: "3d01a0bb3c2db3f521c6d0c493ba1773"
  on_begin:
    then:
      - deep_sleep.prevent: ${room}_sleep

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Espcamera Fallback Hotspot"
    password: "oWiaDq4n3oiB"

i2c:
  sda: 21
  scl: 22
  
button:
  - platform: safe_mode
    name: "${uroom} Safe Mode"

deep_sleep:
  run_duration: 30min
  sleep_duration: 5min
  id: ${room}_sleep
  wakeup_pin: 33
  wakeup_pin_mode: KEEP_AWAKE
  

# Comment out if you have a font file in place, otherwise it won't compile
font:
  - file: "fonts/Roboto/Roboto-Regular.ttf"
    id: roboto
    size: 14

display:
 - platform: ssd1306_i2c
   model: "SSD1306 128x64"
   rotation: 180
   lambda: |-
     it.print(0, 10, id(roboto), "Awake!");
     
esp32_camera:
  name: "${uroom} Camera"
  external_clock:
    pin: GPIO27
    frequency: 20MHz
  i2c_pins:
    sda: GPIO25
    scl: GPIO23
  data_pins: [GPIO17, GPIO35, GPIO34, GPIO5, GPIO39, GPIO18, GPIO36, GPIO19]
  vsync_pin: GPIO22
  href_pin: GPIO26
  pixel_clock_pin: GPIO21
  reset_pin: GPIO15

  
# binary_sensor:
#  - platform: gpio
#    pin: 33
#    name: "${uroom} PIR Sensor"
#    device_class: motion
#  - platform: gpio
#    pin: 
#      number: 34
#      inverted: true
#    name: "${uroom} Button"
