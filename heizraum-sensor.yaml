
ota:
  password: "7d6fd9a0f0987ff03295ddf0a2e1a7c9"


esp8266:
  board: d1_mini
  framework:
    version: 2.7.4



# ---
substitutions:
  room: heizraum
  uroom: Heizraum

esphome:
  name: $room-sensor
  on_boot:
    priority: 600
    then:
      - light.turn_on:
          id: led
          brightness: 100%
          red: 100%
          green: 0
          blue: 0
      - wait_until:
          wifi.connected:
      - light.turn_on:
          id: led
          brightness: 100%
          red: 100%
          green: 100%
          blue: 0
      - wait_until:
          api.connected:
      - light.turn_on:
          id: led
          brightness: 100%
          red: 0%
          green: 100%
          blue: 0
      - delay: 1s
      - light.turn_off: led
      
            

# Enable logging
logger:
  level: INFO

# Enable Home Assistant API
api:


button:
  - platform: safe_mode
    name: "$uroom Restart (Safe Mode)"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  use_address: 192.168.24.113

mqtt:
  broker: pi3.ch5.garf.de
  discovery: false
  discovery_retain: false
  topic_prefix: /Chattenweg5/$uroom/sensor
  reboot_timeout: 0s
  keepalive: 20s
  username: $room-sensor
  

i2c:
  - id: bus_a
    scan: true
    sda: 4
    scl: 5
#    frequency: 400kHz

bme680_bsec:
  address: 0x77
  temperature_offset: -1.0
#  sample_rate: ULP

sensor:
  - platform: wifi_signal
    name: "${uroom} WiFi Signal"
    update_interval: 60s
  - platform: tsl2561
    i2c_id: bus_a
    id: ${room}_light
    name: "${uroom} Light"
    address: 0x39
    accuracy_decimals: 2
    on_value:
      then:
        - mqtt.publish:
            topic: "/Chattenweg5/$uroom/light"
            payload: !lambda |-
              return to_string(id(${room}_light).state);
  - platform: bme680_bsec
    temperature:
      accuracy_decimals: 2
      name: "${uroom} Temperatur"
      id: ${room}_temperature
      on_value:
        then:
          - mqtt.publish:
              topic: "/Chattenweg5/$uroom/temperature"
              payload: !lambda |-
                return to_string(id(${room}_temperature).state);
    pressure:
      accuracy_decimals: 2
      name: "${uroom} Luftdruck"
      id: "${room}_pressure"
      on_value:
        then:
          - mqtt.publish:
              topic: "/Chattenweg5/$uroom/airpressure"
              payload: !lambda |-
                return to_string(id(${room}_pressure).state);
    humidity:
      accuracy_decimals: 2
      name: "${uroom} Luftfeuchtigkeit"
      id: "${room}_humidity"
      on_value:
        then:
          - mqtt.publish:
              topic: "/Chattenweg5/$uroom/humidity"
              payload: !lambda |-
                return to_string(id(${room}_humidity).state);
    gas_resistance:
      accuracy_decimals: 2
      name: "${uroom} Gas Resistance"
    iaq:
      accuracy_decimals: 2
      name: "${uroom}  IAQ"
    co2_equivalent:
      accuracy_decimals: 2
      name: "${uroom}  CO2 Equivalent"
      id: ${room}_co2
      on_value:
        then:
          - mqtt.publish:
              topic: "/Chattenweg5/$uroom/co2"
              payload: !lambda |-
                return to_string(id(${room}_co2).state);
    breath_voc_equivalent:
      accuracy_decimals: 2
      name: "${uroom}  Breath VOC Equivalent"

text_sensor:
  - platform: bme680_bsec
    iaq_accuracy:
      name: "${uroom} IAQ Accuracy"
      
light:
  - platform: neopixelbus
    id: led
    variant: WS2811
    type: GRB
    pin: 14
    num_leds: 1
    name: "${uroom} LED"
