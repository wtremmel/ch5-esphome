substitutions:
  room: arbeitszimmer
  uroom: Arbeitszimmer

esphome:
  name: ${room}-co2
  on_boot:
    priority: 600
    then:
      - light.turn_on:
          id: led
          brightness: 100%
          red: 100%
          green: 0
          blue: 0
      - wait_until:
          wifi.connected:
      - light.turn_on:
          id: led
          brightness: 100%
          red: 100%
          green: 100%
          blue: 0
      - wait_until:
          api.connected:
      - light.turn_on:
          id: led
          brightness: 100%
          red: 0%
          green: 100%
          blue: 0



esp8266:
  board: d1_mini
  framework:
    # version: 2.7.4
    version: recommended

# Enable logging
logger:
  level: INFO

# Enable Home Assistant API
api:

mqtt:
  broker: mqtt.ch5.garf.de
  discovery: false
  discovery_retain: false
  topic_prefix: /Chattenweg5/${uroom}/co2
  reboot_timeout: 0s
  keepalive: 60s
  username: ${room}-co2
  password: ${room}-co2
  

ota:
  password: "3e15058a2c29fa7110d941b6b41f0656"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  reboot_timeout: 5min
  fast_connect: true
  output_power: 20
  power_save_mode: high

i2c:
  - id: bus_a
    scan: false
    sda: 4
    scl: 5
    frequency: 400kHz
    
font:
  - file: "fonts/Roboto/DroidSans-Bold.ttf"
    id: roboto
    size: 28

button:
  - platform: safe_mode
    name: "$uroom CO2 Restart (Safe Mode)"
    
sensor:
  - platform: ccs811
    eco2:
      name: "${uroom} CO2"
      id: ${room}_co2
      on_value:
        then:
          - mqtt.publish:
              topic: "/Chattenweg5/${uroom}/CO2"
              payload: !lambda |-
                return to_string(id(${room}_co2).state);
      on_value_range:
        - above: 2000
          then:
            - light.turn_on:
                id: led
                brightness: 80%
                red: 100%
                green: 0%
                blue: 0%
        - above: 1000
          below: 2000
          then:
            - light.turn_on:
                id: led
                brightness: 80%
                red: 100%
                green: 100%
                blue: 0%
        - below: 1000
          above: 400
          then:
            - light.turn_on:
                id: led
                brightness: 80%
                red: 0%
                green: 100%
                blue: 0%
        - below: 399
          then:
            - light.turn_off:
                id: led
    tvoc:
      name: "${uroom} TVOC"
    address: 0x5A
    update_interval: 60s 
    
light:
  - platform: neopixelbus
    type: GRB
    id: led
    variant: WS2811
    pin: 14
    num_leds: 1

display:
  - platform: ssd1306_i2c
    model: "SH1106 128x64"
    address: 0x3C
    rotation: 0
    lambda: |-
      if (isnan(id(${room}_co2).state)) 
        it.fill(COLOR_OFF);
      else
        it.printf(0, 0, id(roboto), "%.0f ppm",id(${room}_co2).state);
      

