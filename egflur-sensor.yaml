
ota:
  password: "17cdc84dc07200c621bf878a2df9b871"



esp8266:
  board: d1_mini


# ---
substitutions:
  room: egflur
  uroom: EG-Flur

esphome:
  name: $room-sensor
  on_boot:
    priority: 600
    then:
      - light.turn_on:
          id: led
          brightness: 100%
          red: 100%
          green: 0
          blue: 0
      - wait_until:
          wifi.connected:
      - light.turn_on:
          id: led
          brightness: 100%
          red: 100%
          green: 100%
          blue: 0
      - wait_until:
          api.connected:
      - light.turn_on:
          id: led
          brightness: 100%
          red: 0%
          green: 100%
          blue: 0
      - delay: 1s
      - light.turn_off: led
      - switch.turn_on: ${room}_display_on

      
font:
  - file: "fonts/Roboto/DroidSans-Bold.ttf"
    id: roboto
    size: 18
  - file: "fonts/Roboto/Roboto-Black.ttf"
    id: font2
    size: 18
    glyphs: ["<",">","-","D"]
      
# Enable logging
logger:
#  level: ERROR

# Enable Home Assistant API
api:


button:
  - platform: safe_mode
    name: "$uroom Restart (Safe Mode)"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password


i2c:
  - id: bus_a
    scan: true
    sda: 4
    scl: 5
    frequency: 200kHz

sensor:
  - platform: wifi_signal
    name: "${uroom} WiFi Signal"
    update_interval: 60s
  - platform: homeassistant
    entity_id: sensor.garten_temperatur
    id: garten_temperatur
  - platform: homeassistant
    entity_id: sensor.2og_loggia_temperatur
    id: loggia_temperatur
  - platform: tsl2561
    i2c_id: bus_a
    id: ${room}_light
    name: "${uroom} Light"
    address: 0x39
    update_interval: 60s
    accuracy_decimals: 2
  - platform: bme280
    i2c_id: bus_a
    temperature:
      name: "${uroom} Temperatur"
      id: ${room}_temperature
      accuracy_decimals: 2
      filters:
        - offset: -2
        - sliding_window_moving_average:
            window_size: 10
            send_every: 6
    pressure:
      name: "${uroom} Luftdruck"
      id: "${room}_pressure"
      accuracy_decimals: 2
      filters:
        - sliding_window_moving_average:
            window_size: 10
            send_every: 6
    humidity:
      name: "${uroom} Luftfeuchtigkeit"
      id: "${room}_humidity"
      accuracy_decimals: 2
      filters:
        - sliding_window_moving_average:
            window_size: 10
            send_every: 6
    address: 0x76
    update_interval: 5s

light:
  - platform: neopixelbus
    id: led
    variant: WS2811
    type: GRB
    pin: 14
    num_leds: 1
    name: "${uroom} LED"
    
switch:
  - platform: template
    name: "${uroom} Display"
    id: ${room}_display_on
    optimistic: true
    
text_sensor:
  - platform: homeassistant
    internal: true
    id: wostehtdasAuto
    entity_id: input_text.carlocation

binary_sensor:
  - platform: homeassistant
    entity_id: input_boolean.alarmierung
    id: alarmierung
    internal: true
  - platform: homeassistant
    entity_id: binary_sensor.fenster_bad1_state  
    id: bad1_fenster
    name: "Bad1"
    internal: true
  - platform: homeassistant
    entity_id: binary_sensor.fenster_bad2_state  
    id: bad2_fenster
    name: "Bad2"
    internal: true
  - platform: homeassistant
    entity_id: binary_sensor.fenster_gaestezimmer_35fd906b_ias_zone  
    id: gaestezimmer_fenster
    name: "Gaestezimmer"
    internal: true
  - platform: homeassistant
    entity_id: binary_sensor.fenster_kueche_state  
    id: kueche_fenster
    name: "Küche"
    internal: true
  - platform: homeassistant
    entity_id: binary_sensor.fenster_schlafzimmer_state  
    id: schlafzimmer_fenster
    name: "Schlafzimmer"
    internal: true
  - platform: homeassistant
    entity_id: binary_sensor.fenster_wohnzimmer_state  
    id: wohnzimmer_fenster
    name: "Wohnzimmer"
    internal: true
  - platform: homeassistant
    entity_id: binary_sensor.balkontuer_arbeitszimmer_state  
    id: arbeitszimmer_fenster
    name: "Arbeitszimmer"
    internal: true
  - platform: homeassistant
    entity_id: binary_sensor.lumi_lumi_sensor_magnet_aq2_on_off
    id: haustuer
    name: "Haustür"
    internal: true
    on_state:
      then:
        - light.turn_off: led
  - platform: homeassistant
    entity_id: binary_sensor.lumi_lumi_sensor_magnet_aq2_0e3dcf03_on_off
    id: briefkasten
    name: "Briefkasten"
    internal: true
    on_press:
      then:
        - light.turn_on:
            id: led
            brightness: 80%
            red: 100%
            green: 0
            blue: 0
    on_release:
      then:
        - light.turn_on:
            id: led
            brightness: 80%
            red: 1
            green: 1
            blue: 0
  - platform: gpio
    pin: 12
    id: ${room}_motion
    name: "${uroom} Motion"
    device_class: motion
    filters:
      - delayed_on: 1s
    on_press:
      then:
        - if:
            condition:
              binary_sensor.is_on: alarmierung
            then:
              - light.turn_on:
                  id: led
                  brightness: 100%
                  red: 100%
                  green: 0
                  blue: 0
    on_release:
      then:
        - if:
            condition:
              binary_sensor.is_on: alarmierung
            then:
              - light.turn_off: led

time:
  - platform: homeassistant
    id: homeassistant_time


display:
  - platform: ssd1306_i2c
    model: "SH1106 128x64"
    address: 0x3C
    rotation: 180
    lambda: |-
      if (id(${room}_display_on).state) {
        int fensterOffen = 0;
        int stretchFactor=18;
        if (id(bad1_fenster).state) {
          it.printf(0,stretchFactor*fensterOffen,id(roboto),"Bad1");
          fensterOffen++;
        }
        if (id(bad2_fenster).state) {
          it.printf(0,stretchFactor*fensterOffen,id(roboto),"Bad2");
          fensterOffen++;
        }
        if (id(kueche_fenster).state) {
          it.printf(0,stretchFactor*fensterOffen,id(roboto),"Küche");
          fensterOffen++;
        }
        if (id(gaestezimmer_fenster).state) {
          it.printf(0,stretchFactor*fensterOffen,id(roboto),"Gaestezimmer");
          fensterOffen++;
        }
        if (id(schlafzimmer_fenster).state) {
          it.printf(0,stretchFactor*fensterOffen,id(roboto),"Schlafzimmer");
          fensterOffen++;
        }
        if (id(wohnzimmer_fenster).state) {
          it.printf(0,stretchFactor*fensterOffen,id(roboto),"Wohnzimmer");
          fensterOffen++;
        }
        if (id(arbeitszimmer_fenster).state) {
          it.printf(0,stretchFactor*fensterOffen,id(roboto),"Arbeitszimmer");
          fensterOffen++;
        }
        if (id(haustuer).state) {
          it.printf(0,stretchFactor*fensterOffen,id(roboto),"Haustuer");
          fensterOffen++;
        }
        if (fensterOffen == 0)
          fensterOffen = 1;
        if (id(garten_temperatur).state < id(loggia_temperatur).state && id(garten_temperatur).state > -30)
          it.printf(0, stretchFactor*fensterOffen, id(roboto), "Garten: %.1f°C",id(garten_temperatur).state);
        else
          it.printf(0, stretchFactor*fensterOffen, id(roboto), "Loggia: %.1f°C",id(loggia_temperatur).state);
          // it.printf(0,stretchFactor*(fensterOffen+1), id(roboto), "H: %d",id(haustuer).state);
        it.printf(110,0,id(font2),id(wostehtdasAuto).state.c_str());
      } else
        it.fill(COLOR_OFF);
      

